var mongoose = require('mongoose');

//country schema definition
var countriesSchema = new mongoose.Schema({
	id: {type: integer, index: {unique: true}},
	country: String,
	country_id: Number
});


var Country = mongoose.model('Country', countriesSchema);


//Add new country
exports.create = function(model, requestBody, response) {

	// convert from JSON data structure to model instance
	var country = toCountry(requestBody, model);
	var id = requestBody.id;
	country.save(function(error) {
		if (!error) {
			country.save();
			response.send('Country Added successfully');
		} else {
			console.log(error);
		}
	})
};

//Show all data in country collection
exports.list = function(model, response) {
	model.find({}, function(error, result) {
		if (error) {
			console.error(error);
			return null;
		}
		if (response != null) {
			// response.setHeader('content-type', 'application/json');
			response.end(JSON.stringify(result))
		}
		return JSON.stringify(result);
	});
}

//Find Country based on argument supplied
exports.findByArg = function(model, arg, val, response) {
	model.findOne({
		arg : val
	}, function(error, result) {
		if (error) {
			console.error(error);
			response.writeHead(500, {
				'Content-Type' : 'text/plain'
			});
			response.end('Internal server error');
			return;
		} else {
			if (!result) {
				if (response != null) {
					response.writeHead(404, {
						'Content-Type' : 'text/plain'
					});
					response.end('Not Found');
				}
				return;
			}
			if (response != null) {
				response.setHeader('Content-Type', 'application/json');
				response.send(result);
			}
			console.log(result);
		}
	});
};

//Find Country By Name
exports.findByName = function(model, requestBody, response) {
	model.find({
		country : requestBody.country
		
	}, function(error, result) {
		if (error) {
			console.error(error);
			response.writeHead(500, {
				'Content-Type' : 'text/plain'
			});
			response.end('Internal server error');
			return;
		} else {
			if (!result) {
				if (response != null) {
					response.writeHead(404, {
						'Content-Type' : 'text/plain'
					});
					response.end('Not Found');
				}
				return;
			}
			if (response != null) {
				response.setHeader('Content-Type', 'application/json');
				response.send(result);
			}
			console.log(result);
		}
	});
}

//Remove country based on Id given
exports.remove = function(model, arg, response) {

	model.findOne({
		id : arg
	}, function(error, result) {
		if (!error) {
			result.remove();
			response.send('Country Removed successfully');
		} else {
			console.log(error);
		}
	})
};

//convert from JSON data structure to model instance
function toCountry(body, Recording) {
	var id_gen = Math.random() * (10000 - 1) + 1;

	return new Recording({
		id : id_gen,
		country : body.country,
		country_id: body.country_id

	});
};

exports.Country = Country;
