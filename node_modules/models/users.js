var mongoose = require('mongoose');

var usersSchema = new mongoose.Schema({
	id : {
		type : Number,
		index : {
			unique : true
		}
	},
	username : String,
	password : String,
	first_name : String,
	last_name : String,
	email : String,
	hover_mode : Number,
	hidden : Boolean,
	categories : [ String ],

	created_at : Date,
	updated_at : Date
});

var User = mongoose.model('User', usersSchema);

// Add new user
exports.create = function(model, requestBody, response) {

	// convert from json data structure to model instance
	var user = toUser(requestBody, model);
	var id = requestBody.id;
	user.save(function(error) {
		if (!error) {
			user.save();
			response.send('User Added successfully');
		} else {
			console.log(error);
		}
	})
};

// Show all data in user collection
exports.list = function(model, response) {
	model.find({}, function(error, result) {
		if (error) {
			console.error(error);
			return null;
		}
		if (response != null) {
			// response.setHeader('content-type', 'application/json');
			response.end(JSON.stringify(result))
		}
		return JSON.stringify(result);
	});
}

// Find User based on argument supplied
exports.findByArg = function(model, arg, val, response) {
	model.findOne({
		arg : val
	}, function(error, result) {
		if (error) {
			console.error(error);
			response.writeHead(500, {
				'Content-Type' : 'text/plain'
			});
			response.end('Internal server error');
			return;
		} else {
			if (!result) {
				if (response != null) {
					response.writeHead(404, {
						'Content-Type' : 'text/plain'
					});
					response.end('Not Found');
				}
				return;
			}
			if (response != null) {
				response.setHeader('Content-Type', 'application/json');
				response.send(result);
			}
			console.log(result);
		}
	});
};

// Login {Queries the database based on username and password given }
exports.Login = function(model, requestBody, response) {
	model.find({
		username : requestBody.username,
		password : requestBody.password
	}, function(error, result) {
		if (error) {
			console.error(error);
			response.writeHead(500, {
				'Content-Type' : 'text/plain'
			});
			response.end('Internal server error');
			return;
		} else {
			if (!result) {
				if (response != null) {
					response.writeHead(404, {
						'Content-Type' : 'text/plain'
					});
					response.end('Not Found');
				}
				return;
			}
			if (response != null) {
				response.setHeader('Content-Type', 'application/json');
				response.send(result);
			}
			console.log(result);
		}
	});
}

// Remove user based on Id given
exports.remove = function(model, arg, response) {

	model.findOne({
		id : arg
	}, function(error, result) {
		if (!error) {
			result.remove();
			response.send('User Removed successfully');
		} else {
			console.log(error);
		}
	})
};

// convert from json data structure to model instance
function toUser(body, Recording) {
	var id_gen = Math.random() * (10000 - 1) + 1;

	return new Recording({
		id : id_gen,
		username : body.username,
		password : body.password,
		first_name : body.first_name,
		last_name : body.last_name,
		email : body.email,
		hover_mode : body.hover_mode,
		categories : body.categories,
		created_at : body.created_at,
		updated_at : body.updated_at

	});
}

exports.User = User;
